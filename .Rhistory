plotDist("chisq", params = list(df = k-1), lwd = 3)
install.packages("mosaic")
plotDist("chisq", params = list(df = k-1), lwd = 3)
library(mosaic)
plotDist("chisq", params = list(df = k-1), lwd = 3)
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
install.packages(colorspace)
install.packages("colorspace")
install.packages("ggplot2")
library(ggplot2)
plotDist("chisq", params = list(df = k-1), lwd = 3)
library(mosaic)
require(mosaic)
require(openintro)
favstats(~motheriq, data = gifted)
data(gifted)
??mosaic
mydata <- read.csv(file.choose(), header=TRUE)
mydata <- mydata %>% rename(calm_puppy = QID6_1, secure_puppy = QID6_2, nerv_puppy = QID6_3, easy_puppy = QID6_4, appre_puppy = QID6_5, worry_puppy = QID6_6, angry_puppy = QID6_7, happy_puppy = QID6_8, satis_puppy = QID6_9, hostile_puppy = QID6_10, alert_puppy = QID6_11, calm_dog = QID4_1, secure_dog = QID4_2, nerv_dog = QID4_3, easy_dog = QID4_4, appre_dog = QID4_5, worry_dog = QID4_6, angry_dog = QID4_7, happy_dog = QID4_8, satis_dog = QID4_9, hostile_dog = QID4_10, alert_dog = QID4_11)
library(mosaic)
mydata <- mydata %>% rename(calm_puppy = QID6_1, secure_puppy = QID6_2, nerv_puppy = QID6_3, easy_puppy = QID6_4, appre_puppy = QID6_5, worry_puppy = QID6_6, angry_puppy = QID6_7, happy_puppy = QID6_8, satis_puppy = QID6_9, hostile_puppy = QID6_10, alert_puppy = QID6_11, calm_dog = QID4_1, secure_dog = QID4_2, nerv_dog = QID4_3, easy_dog = QID4_4, appre_dog = QID4_5, worry_dog = QID4_6, angry_dog = QID4_7, happy_dog = QID4_8, satis_dog = QID4_9, hostile_dog = QID4_10, alert_dog = QID4_11)
View(mydata)
histogram(~calm_puppy, data = mydata)
histogram(~happy_puppy, data = mydata)
histogram(~angry_puppy, data = mydata)
histogram(~appre_puppy, data = mydata)
favstats(~calm_dog, data = mydata)
favstats(~calm_puppy, data = mydata)
favstats(~(diff = calm_puppy - calm_dog), data = mydata)
favstats(~(calm_puppy - calm_dog), data = mydata)
install.packages("rmarkdown")
seeded <- c(rep(0, 12), rep(1, 24), rep(0, 4), rep(1, 10))
yawned <- c(rep(0, 36), rep(1, 14))
Yawners <- data.frame(seeded, yawned)
library(mosaic)
tally(yawned ~ seeded, data = Yawners)
View(Yawners)
tally(~yawned + seeded, data = Yawners)
tally(~yawned + seeded, data = Yawners)[2,2]    # grab the cell we care about
tally(yawned ~ seeded, data = Yawners)
tally(yawned ~ seeded, data = Yawners)[2,2]    # grab the cell we care about
tally(yawned ~ shuffle(seeded), data = Yawners)  # shuffle the table
tally(yawned ~ shuffle(seeded), data = Yawners)  # shuffle the table
tally(yawned ~ shuffle(seeded), data = Yawners)  # shuffle the table
tally(yawned ~ shuffle(seeded), data = Yawners)  # shuffle the table
tally(yawned ~ shuffle(seeded), data = Yawners)  # shuffle the table
tally(yawned ~ shuffle(seeded), data = Yawners)  # shuffle the table
tally(yawned ~ shuffle(seeded), data = Yawners)  # shuffle the table
perms <- do(1000) * tally(yawned ~ shuffle(seeded), data = Yawners)[2,2]
View(mydata)
View(perms)
histogram(~result, data = perms)
favstats(~result, data = perms)
perms <- do(10000) * tally(yawned ~ shuffle(seeded), data = Yawners)[2,2]
favstats(~result, data = perms)
View(perms)
View(Yawners)
require(mosaic)
data(CPS85)
people <- CPS85
head(people)
require(dplyr)
glipmse(people)
glimpse(people)
mean(~wage, data = people)
summarize(people, mean(wage)) mean(~wage, data = people)
summarize(people, mean(wage))
mean(~wage, data = people)
summarize(people, n())
nrow(people)
summarize(people, n())
nrow(people)
summarize(people, sd(wage))
group_by(people, married) %>%
summarise(mean(wage))
mean(~wage + married, data = people)
View(people)
mean(~wage, married, data = people)
mean(~wage + married, data = people)
mean(~wage | married, data = people)
tally(~married + sex, data = wages)
tally(~married | sex, data = wages)
tally(~married | sex, data = people)
nrow(people)
mean(~wage, data = people)
sd(~wage, data = people)
favstats(~wage, data = people)
mean(~wage | married, data = people)
people <- people %>%
mutate(fraction = exper/age)
qplot(x = married, y = wage, data = people, geom = "boxplot")
qplot(x = age, y = wage, color = married, data = people)
tally(~married, data = people)
tally(~married | sex, data = people)
require(mosaic)
require(mosaic)
data(CPS85)
people <- CPS85
head(people)
qplot(x = married, y = wage, data = people, geom = "boxplot")
qplot(x = married, y = wage, geom = "boxplot", data = people)
library(mosaic)
library(ggplot2)
args(geom_histogram)
args(stat_bin)
install.packages("rvest")
install.packages("readr")
head(ToothGrowth)
library(dplyr)
ToothGrowth <- ToothGrowth %>%
mutate(dose = factor(dose))
class(ToothGrowth$dose)
library(ggplot2)
ggplot(ToothGrowth)
ggplot(ToothGrowth, aes(does, len)) + geom_boxplot()
ggplot(ToothGrowth, aes(does, len)) + geom_boxplot()
ggplot(ToothGrowth, aes(dose, len)) + geom_boxplot()
ggplot(ToothGrowth, aes(dose, len)) + geom_boxplot(fill = dose)
ggplot(ToothGrowth, aes(dose, len)) + geom_boxplot(aes(fill = dose))
MyPlot <- ggplot(ToothGrowth, aes(dose, len)) + geom_boxplot(aes(fill = dose))
myPlot <- ggplot(ToothGrowth, aes(dose, len)) + geom_boxplot(aes(fill = dose))
myPlot + scale_fill_manual(values = c("#004f71", "#465a01", "#981d97"))
library(RColorBrewer)
myPlot + scale_fill_brewer(palette = "Set2")
display.brewer.all()
display.brewer.pal()
display.brewer.all()
myPlot + theme_light(
)
myPlot + theme_light() + scale_fill_grey()
library(foreign)
getwd()
gss <- read.spss(file = "/Users/randigarcia/Desktop/GSS2014.sav", header = TRUE)
gss <- read.spss(file = "/Users/randigarcia/Desktop/GSS2014.sav")
gss[1:10,1:10]
str(gss)
qplot(x = age, data = gss)
library(dplyr)
qplot(x = age, data = gss)
library(dplyr)
qplot(x = age, data = gss)
qplot(x = age, data = gss, geom = "histogram")
head(gss$age)
library(ggplot2)
qplot(x = age, data = gss, geom = "histogram")
gss <- gss %>%
select(age)
gss_age <- gss %>%
select(age)
setwd("/Users/randigarcia/Dropbox/Smith-Teaching/SDS-201/Spring2017/www")
library(knitr)
pandoc(knit("syllabus.Rmd"), format="latex")
purl("lectures/03_experimental-design.Rnw", documentation = FALSE)
